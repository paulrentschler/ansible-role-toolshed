---
# Configure database backups using Bucket from ToolShed


- name: "Database : create the backup directory"
  ansible.builtin.file:
    path: "{{ toolshed_backup_db_backup_dir }}"
    state: directory
    owner: "{{ toolshed_backup_db_owner }}"
    group: "{{ toolshed_backup_db_group }}"
    mode: 0775
  become: yes

- name: "Database : create the daily backup directory"
  ansible.builtin.file:
    path: "{{ toolshed_backup_db_backup_dir }}/daily"
    state: directory
    owner: "{{ toolshed_backup_db_owner }}"
    group: "{{ toolshed_backup_db_group }}"
    mode: 0775
  become: yes
  when: toolshed_backup_db_daily > 0

- name: "Database : create the weekly backup directory"
  ansible.builtin.file:
    path: "{{ toolshed_backup_db_backup_dir }}/weekly"
    state: directory
    owner: "{{ toolshed_backup_db_owner }}"
    group: "{{ toolshed_backup_db_group }}"
    mode: 0775
  become: yes
  when: toolshed_backup_db_weekly > 0

- name: "Database : create the monthly backup directory"
  ansible.builtin.file:
    path: "{{ toolshed_backup_db_backup_dir }}/monthly"
    state: directory
    owner: "{{ toolshed_backup_db_owner }}"
    group: "{{ toolshed_backup_db_group }}"
    mode: 0775
  become: yes
  when: toolshed_backup_db_monthly > 0

- name: "Database : create the yearly backup directory"
  ansible.builtin.file:
    path: "{{ toolshed_backup_db_backup_dir }}/yearly"
    state: directory
    owner: "{{ toolshed_backup_db_owner }}"
    group: "{{ toolshed_backup_db_group }}"
    mode: 0775
  become: yes
  when: toolshed_backup_db_yearly > 0


- name: "Database : create the backup database user"
  community.mysql.mysql_user:
    name: "{{ toolshed_backup_db_user }}"
    password: "{{ toolshed_backup_db_password }}"
    priv: "*.*:SELECT,SHOW DATABASES,LOCK TABLES,PROCESS"
    host: "localhost"
    state: present
    login_unix_socket: "{{ mysql_socket|default('/var/run/mysqld/mysqld.sock') }}"
  become: yes
  delegate_to: "{{ toolshed_backup_db_primary_host }}"
  when: "toolshed_backup_db_type == 'mysql'"


- name: "Database : provide the secure login credentials file"
  ansible.builtin.copy:
    src: "{{ toolshed_backup_db_login_file }}"
    dest: "~/.mylogin.cnf"
    owner: "{{ devops_user|default(ansible_user) }}"
    group: "{{ devops_group|default('adm') }}"
    mode: 0600
  when: toolshed_backup_db_login_file is defined and toolshed_backup_db_login_file != ''

- name: "Database : create the backup script"
  ansible.builtin.template:
    src: backupdb.sh.j2
    dest: "{{ toolshed_scripts_dir }}/{{ toolshed_backup_db_script }}.sh"
    owner: "{{ toolshed_backup_db_schedule_user }}"
    group: "{{ devops_group|default('adm') }}"
    mode: 0770
  become: yes

- name: "Database : schedule the Cron task"
  ansible.builtin.template:
    src: backupdb.cron.j2
    dest: "/etc/cron.d/{{ toolshed_backup_db_script }}"
    owner: root
    group: root
    mode: 0644
  become: yes
  tags:
    - toolshed_db_cron
    - toolshed_cron
    - cron

- name: "Database : encryption setup"
  ansible.builtin.debug:
    msg: "TODO: manually install the GPG key associated with {{ toolshed_backup_db_encryption_key }} so backups can be encrypted. Instructions for doing this are in this role's README."
  when: toolshed_backup_db_encryption_key is defined and toolshed_backup_db_encryption_key != ''
